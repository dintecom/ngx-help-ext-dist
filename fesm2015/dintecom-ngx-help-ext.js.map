{"version":3,"file":"dintecom-ngx-help-ext.js","sources":["../../../projects/ngx-help-ext/src/lib/api/article.ts","../../../projects/ngx-help-ext/src/lib/api/attachment.ts","../../../projects/ngx-help-ext/src/lib/help-ext.config.ts","../../../projects/ngx-help-ext/src/lib/api/help-ext.service.ts","../../../projects/ngx-help-ext/src/lib/help-ext-flyout/help-ext-flyout-animations.ts","../../../projects/ngx-help-ext/src/lib/help-ext-flyout/help-ext-flyout.component.ts","../../../projects/ngx-help-ext/src/lib/help-ext/scroll-clip-v17.ts","../../../projects/ngx-help-ext/src/lib/help-ext/flexible-connected-position-strategy-v17.ts","../../../projects/ngx-help-ext/src/lib/help-ext/help-ext.component.ts","../../../projects/ngx-help-ext/src/lib/help-ext-article-content/help-ext-article-content.component.ts","../../../projects/ngx-help-ext/src/lib/accessors/uid.directive.ts","../../../projects/ngx-help-ext/src/lib/help-ext-attachment/help-ext-attachment.component.ts","../../../projects/ngx-help-ext/src/lib/help-ext/help-ext.module.ts","../../../projects/ngx-help-ext/src/public-api.ts","../../../projects/ngx-help-ext/src/dintecom-ngx-help-ext.ts"],"sourcesContent":["import { Attachment } from './attachment';\n\nexport class Article {\n  content: string;\n  attachments?: Attachment[];\n}\n","export class Attachment {\n  name: string;\n  url: string;\n}\n","import { HttpHeaders } from '@angular/common/http';\nimport { InjectionToken, Provider } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nexport abstract class HelpExtUrlResolver {\n  abstract resolve(): string | Observable<string>;\n}\n\nexport type HelpExtHttpHeaders = HttpHeaders | { [header: string]: string | string[] };\n\nexport interface HelpExtConfig {\n  helpExtUrl?: string;\n  helpExtUrlResolver?: Provider;\n  cacheLifetimeSecond?: number;\n  httpHeaders?: HelpExtHttpHeaders;\n}\n\nexport const HELP_EXT_URL_TOKEN = new InjectionToken<string>('HELP_EXT_URL');\nexport const HELP_EXT_CACHE_LIFETIME_TOKEN = new InjectionToken<string>('HELP_EXT_CACHE_LIFETIME');\nexport const HELP_EXT_HTTP_HEADERS = new InjectionToken<string>('HELP_EXT_HTTP_HEADERS');\n","import { HttpClient } from '@angular/common/http';\nimport { ElementRef, Inject, Injectable, SecurityContext } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { isObservable, Observable, of, throwError } from 'rxjs';\nimport { catchError, finalize, map, mergeMap, share, shareReplay, tap } from 'rxjs/operators';\nimport {\n  HelpExtHttpHeaders,\n  HelpExtUrlResolver,\n  HELP_EXT_CACHE_LIFETIME_TOKEN,\n  HELP_EXT_HTTP_HEADERS,\n  HELP_EXT_URL_TOKEN,\n} from '../help-ext.config';\nimport { Article } from './article';\n\ninterface ICacheEntry {\n  article?: Article;\n  error?: any;\n}\n\nexport const cacheLifetimeSecondDefault = 30 * 60;\n\n@Injectable()\nexport class HelpExtService {\n  private readonly cacheLifetime: number;\n\n  private readonly cacheById: { [id: number]: ICacheEntry } = {};\n  private readonly requestCacheById: { [id: number]: Observable<Article> } = {};\n  private readonly cacheByUid: { [url: string]: ICacheEntry } = {};\n  private readonly requestCacheByUid: { [url: string]: Observable<Article> } = {};\n  private readonly cacheByUrl: { [url: string]: ICacheEntry } = {};\n  private readonly requestCacheByUrl: { [url: string]: Observable<Article> } = {};\n\n  readonly baseAddress: Observable<string>;\n\n  constructor(\n    helpExtUrlResolver: HelpExtUrlResolver,\n    private readonly _http: HttpClient,\n    private readonly _sanitizer: DomSanitizer,\n    @Inject(HELP_EXT_URL_TOKEN) helpExtUrl: string,\n    @Inject(HELP_EXT_CACHE_LIFETIME_TOKEN) cacheLifetimeSecond: number,\n    @Inject(HELP_EXT_HTTP_HEADERS) private readonly _httpHeaders: HelpExtHttpHeaders,\n  ) {\n    if (helpExtUrlResolver) {\n      const resolved = helpExtUrlResolver.resolve();\n      if (typeof resolved === 'string') {\n        this.baseAddress = of(resolved).pipe(shareReplay(1));\n      } else if (isObservable(resolved)) {\n        this.baseAddress = resolved.pipe(shareReplay(1));\n      } else {\n        throw Error('Not supported helpExtUrlResolver');\n      }\n    } else if (helpExtUrl) {\n      this.baseAddress = of(helpExtUrl).pipe(shareReplay(1));\n    } else {\n      throw Error('Please, configure helpExtUrl or helpExtUrlResolver');\n    }\n\n    this.cacheLifetime = cacheLifetimeSecond * 1000;\n  }\n\n  getArticleById(id: number): Observable<Article> {\n    return this.baseAddress.pipe(\n      mergeMap(baseAddress =>\n        this.cachedGet(this.cacheById, this.requestCacheById, id, `${baseAddress}/api/Clients/GetArticleById/${id}`),\n      ),\n    );\n  }\n\n  getArticleByUid(siteOrigin: string, uid: string): Observable<Article> {\n    return this.baseAddress.pipe(\n      mergeMap(baseAddress =>\n        this.cachedGet(\n          this.cacheByUid,\n          this.requestCacheByUid,\n          uid,\n          `${baseAddress}/api/Clients/GetArticleByUid?siteOrigin=${encodeURIComponent(\n            siteOrigin,\n          )}&uid=${encodeURIComponent(uid)}`,\n        ),\n      ),\n    );\n  }\n\n  getArticleByUrl(url: string): Observable<Article> {\n    return this.baseAddress.pipe(\n      mergeMap(baseAddress =>\n        this.cachedGet(\n          this.cacheByUrl,\n          this.requestCacheByUrl,\n          url,\n          `${baseAddress}/api/Clients/GetArticleByUrl?url=${encodeURIComponent(url)}`,\n        ),\n      ),\n    );\n  }\n\n  sanitizeContent(content: string): string {\n    return this._sanitizer.sanitize(SecurityContext.HTML, this._sanitizer.bypassSecurityTrustHtml(content));\n  }\n\n  makeAbsoluteLinks(element: Element | ElementRef, baseAddress: string, linkTarget?: string): void {\n    const el = element instanceof ElementRef ? (element.nativeElement as Element) : element;\n\n    const links = el.getElementsByTagName('a');\n    for (let i = 0; i < links.length; i++) {\n      if (linkTarget) {\n        links[i].setAttribute('target', linkTarget);\n      }\n\n      let href = links[i].getAttribute('href');\n      if (/(?:^[a-z][a-z0-9+.-]*:|\\/\\/)/.test(href)) continue;\n\n      href = `${baseAddress}/${href}`;\n      links[i].setAttribute('href', href);\n    }\n  }\n\n  private cachedGet(\n    cache: { [id: number]: ICacheEntry } | { [url: string]: ICacheEntry },\n    requestCache: { [id: number]: Observable<Article> } | { [id: number]: Observable<Article> },\n    key: number | string,\n    httpUrl: string,\n  ): Observable<Article> {\n    if (cache[key]) {\n      return cache[key].error ? throwError(cache[key].error) : of(cache[key].article);\n    }\n\n    if (requestCache[key]) return requestCache[key];\n\n    const request: { headers?: HelpExtHttpHeaders } = {};\n    if (this._httpHeaders) {\n      request.headers = this._httpHeaders;\n    }\n    requestCache[key] = this._http.get(httpUrl, request).pipe(\n      map(a => a as Article),\n      tap(a => {\n        delete requestCache[key];\n        cache[key] = {\n          article: a,\n        };\n      }),\n      catchError(e => {\n        delete requestCache[key];\n        cache[key] = {\n          error: e,\n        };\n        return throwError(e);\n      }),\n      finalize(() => {\n        setTimeout(() => delete cache[key], this.cacheLifetime);\n      }),\n      share(),\n    );\n\n    return requestCache[key];\n  }\n}\n","import { animate, AnimationTriggerMetadata, state, style, transition, trigger } from '@angular/animations';\n\nexport const helpExtFlyoutAnimations: {\n  readonly flyoutState: AnimationTriggerMetadata;\n} = {\n  flyoutState: trigger('state', [\n    state('initial, void, hidden', style({ opacity: 0 })),\n    transition('* => visible', animate('200ms cubic-bezier(0, 0, 0.2, 1)', style({ opacity: 1 }))),\n    transition('* => hidden', animate('100ms cubic-bezier(0, 0, 0.2, 1)', style({ opacity: 0 }))),\n  ]),\n};\n","import { AnimationEvent } from '@angular/animations';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  HostBinding,\n  HostListener,\n  Input,\n  Output,\n} from '@angular/core';\nimport { Article } from '../api/article';\nimport { helpExtFlyoutAnimations } from './help-ext-flyout-animations';\n\nexport type FlyoutVisibility = 'initial' | 'visible' | 'hidden';\n\n@Component({\n  selector: 'help-ext-flyout',\n  templateUrl: './help-ext-flyout.template.html',\n  animations: [helpExtFlyoutAnimations.flyoutState],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    class: 'help-ext-flyout',\n  },\n})\nexport class HelpExtFlyoutComponent {\n  @Input()\n  article: Article;\n\n  @Output()\n  mouseEnter = new EventEmitter<void>();\n\n  @Output()\n  mouseLeave = new EventEmitter<void>();\n\n  @Output()\n  afterHidden = new EventEmitter<void>();\n\n  @HostListener('mouseenter')\n  _onMouseEnter() {\n    this.mouseEnter.emit();\n  }\n\n  @HostListener('mouseleave')\n  _onMouseLeave() {\n    this.mouseLeave.emit();\n  }\n\n  @HostBinding('@state')\n  _visibility: FlyoutVisibility = 'initial';\n\n  @HostListener('@state.done', ['$event'])\n  _onStateDone(event: AnimationEvent) {\n    const toState = event.toState as FlyoutVisibility;\n\n    if (toState === 'hidden' && !this.isVisible()) {\n      this.afterHidden.emit();\n    }\n  }\n\n  show(): void {\n    this._visibility = 'visible';\n  }\n\n  hide(): void {\n    this._visibility = 'hidden';\n  }\n\n  isVisible(): boolean {\n    return this._visibility === 'visible';\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// TODO(jelbourn): move this to live with the rest of the scrolling code\n// TODO(jelbourn): someday replace this with IntersectionObservers\n\n/** Equivalent of `DOMRect` without some of the properties we don't care about. */\ntype Dimensions = Omit<DOMRect, 'x' | 'y' | 'toJSON'>;\n\n/**\n * Gets whether an element is scrolled outside of view by any of its parent scrolling containers.\n * @param element Dimensions of the element (from getBoundingClientRect)\n * @param scrollContainers Dimensions of element's scrolling containers (from getBoundingClientRect)\n * @returns Whether the element is scrolled out of view\n * @docs-private\n */\nexport function isElementScrolledOutsideView(element: Dimensions, scrollContainers: Dimensions[]) {\n  return scrollContainers.some(containerBounds => {\n    const outsideAbove = element.bottom < containerBounds.top;\n    const outsideBelow = element.top > containerBounds.bottom;\n    const outsideLeft = element.right < containerBounds.left;\n    const outsideRight = element.left > containerBounds.right;\n\n    return outsideAbove || outsideBelow || outsideLeft || outsideRight;\n  });\n}\n\n/**\n * Gets whether an element is clipped by any of its scrolling containers.\n * @param element Dimensions of the element (from getBoundingClientRect)\n * @param scrollContainers Dimensions of element's scrolling containers (from getBoundingClientRect)\n * @returns Whether the element is clipped\n * @docs-private\n */\nexport function isElementClippedByScrolling(element: Dimensions, scrollContainers: Dimensions[]) {\n  return scrollContainers.some(scrollContainerRect => {\n    const clippedAbove = element.top < scrollContainerRect.top;\n    const clippedBelow = element.bottom > scrollContainerRect.bottom;\n    const clippedLeft = element.left < scrollContainerRect.left;\n    const clippedRight = element.right > scrollContainerRect.right;\n\n    return clippedAbove || clippedBelow || clippedLeft || clippedRight;\n  });\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport { coerceArray, coerceCssPixelValue } from '@angular/cdk/coercion';\nimport {\n  ConnectedOverlayPositionChange,\n  ConnectionPositionPair,\n  OverlayContainer,\n  OverlayRef,\n  PositionStrategy,\n  ScrollingVisibility,\n  validateHorizontalPosition,\n  validateVerticalPosition,\n} from '@angular/cdk/overlay';\nimport { Platform } from '@angular/cdk/platform';\nimport { CdkScrollable, ViewportRuler, ViewportScrollPosition } from '@angular/cdk/scrolling';\nimport { ElementRef } from '@angular/core';\nimport { Observable, Subject, Subscription } from 'rxjs';\nimport { isElementClippedByScrolling, isElementScrolledOutsideView } from './scroll-clip-v17';\n\n// TODO: refactor clipping detection into a separate thing (part of scrolling module)\n// TODO: doesn't handle both flexible width and height when it has to scroll along both axis.\n\n/** Class to be added to the overlay bounding box. */\nconst boundingBoxClass = 'cdk-overlay-connected-position-bounding-box';\n\n/** Regex used to split a string on its CSS units. */\nconst cssUnitPattern = /([A-Za-z%]+)$/;\n\n/** Possible values that can be set as the origin of a FlexibleConnectedPositionStrategy. */\nexport type FlexibleConnectedPositionStrategyOrigin =\n  | ElementRef\n  | Element\n  | (Point & {\n      width?: number;\n      height?: number;\n    });\n\n/** Equivalent of `DOMRect` without some of the properties we don't care about. */\ntype Dimensions = Omit<DOMRect, 'x' | 'y' | 'toJSON'>;\n\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * implicit position relative some origin element. The relative position is defined in terms of\n * a point on the origin element that is connected to a point on the overlay element. For example,\n * a basic dropdown is connecting the bottom-left corner of the origin to the top-left corner\n * of the overlay.\n */\nexport class FlexibleConnectedPositionStrategy17 implements PositionStrategy {\n  /** The overlay to which this strategy is attached. */\n  private _overlayRef: OverlayRef;\n\n  /** Whether we're performing the very first positioning of the overlay. */\n  private _isInitialRender: boolean;\n\n  /** Last size used for the bounding box. Used to avoid resizing the overlay after open. */\n  private _lastBoundingBoxSize = { width: 0, height: 0 };\n\n  /** Whether the overlay was pushed in a previous positioning. */\n  private _isPushed = false;\n\n  /** Whether the overlay can be pushed on-screen on the initial open. */\n  private _canPush = true;\n\n  /** Whether the overlay can grow via flexible width/height after the initial open. */\n  private _growAfterOpen = false;\n\n  /** Whether the overlay's width and height can be constrained to fit within the viewport. */\n  private _hasFlexibleDimensions = true;\n\n  /** Whether the overlay position is locked. */\n  private _positionLocked = false;\n\n  /** Cached origin dimensions */\n  private _originRect: Dimensions;\n\n  /** Cached overlay dimensions */\n  private _overlayRect: Dimensions;\n\n  /** Cached viewport dimensions */\n  private _viewportRect: Dimensions;\n\n  /** Cached container dimensions */\n  private _containerRect: Dimensions;\n\n  /** Amount of space that must be maintained between the overlay and the edge of the viewport. */\n  private _viewportMargin = 0;\n\n  /** The Scrollable containers used to check scrollable view properties on position change. */\n  private _scrollables: CdkScrollable[] = [];\n\n  /** Ordered list of preferred positions, from most to least desirable. */\n  _preferredPositions: ConnectionPositionPair[] = [];\n\n  /** The origin element against which the overlay will be positioned. */\n  _origin: FlexibleConnectedPositionStrategyOrigin;\n\n  /** The overlay pane element. */\n  private _pane: HTMLElement;\n\n  /** Whether the strategy has been disposed of already. */\n  private _isDisposed: boolean;\n\n  /**\n   * Parent element for the overlay panel used to constrain the overlay panel's size to fit\n   * within the viewport.\n   */\n  private _boundingBox: HTMLElement | null;\n\n  /** The last position to have been calculated as the best fit position. */\n  private _lastPosition: ConnectedPosition | null;\n\n  /** Subject that emits whenever the position changes. */\n  private readonly _positionChanges = new Subject<ConnectedOverlayPositionChange>();\n\n  /** Subscription to viewport size changes. */\n  private _resizeSubscription = Subscription.EMPTY;\n\n  /** Default offset for the overlay along the x axis. */\n  private _offsetX = 0;\n\n  /** Default offset for the overlay along the y axis. */\n  private _offsetY = 0;\n\n  /** Selector to be used when finding the elements on which to set the transform origin. */\n  private _transformOriginSelector: string;\n\n  /** Keeps track of the CSS classes that the position strategy has applied on the overlay panel. */\n  private _appliedPanelClasses: string[] = [];\n\n  /** Amount by which the overlay was pushed in each axis during the last time it was positioned. */\n  private _previousPushAmount: { x: number; y: number } | null;\n\n  /** Observable sequence of position changes. */\n  positionChanges: Observable<ConnectedOverlayPositionChange> = this._positionChanges;\n\n  /** Ordered list of preferred positions, from most to least desirable. */\n  get positions(): ConnectionPositionPair[] {\n    return this._preferredPositions;\n  }\n\n  constructor(\n    connectedTo: FlexibleConnectedPositionStrategyOrigin,\n    private _viewportRuler: ViewportRuler,\n    private _document: Document,\n    private _platform: Platform,\n    private _overlayContainer: OverlayContainer,\n  ) {\n    this.setOrigin(connectedTo);\n  }\n\n  /** Attaches this position strategy to an overlay. */\n  attach(overlayRef: OverlayRef): void {\n    if (this._overlayRef && overlayRef !== this._overlayRef) {\n      throw Error('This position strategy is already attached to an overlay');\n    }\n\n    this._validatePositions();\n\n    overlayRef.hostElement.classList.add(boundingBoxClass);\n\n    this._overlayRef = overlayRef;\n    this._boundingBox = overlayRef.hostElement;\n    this._pane = overlayRef.overlayElement;\n    this._isDisposed = false;\n    this._isInitialRender = true;\n    this._lastPosition = null;\n    this._resizeSubscription.unsubscribe();\n    this._resizeSubscription = this._viewportRuler.change().subscribe(() => {\n      // When the window is resized, we want to trigger the next reposition as if it\n      // was an initial render, in order for the strategy to pick a new optimal position,\n      // otherwise position locking will cause it to stay at the old one.\n      this._isInitialRender = true;\n      this.apply();\n    });\n  }\n\n  /**\n   * Updates the position of the overlay element, using whichever preferred position relative\n   * to the origin best fits on-screen.\n   *\n   * The selection of a position goes as follows:\n   *  - If any positions fit completely within the viewport as-is,\n   *      choose the first position that does so.\n   *  - If flexible dimensions are enabled and at least one satisfies the given minimum width/height,\n   *      choose the position with the greatest available size modified by the positions' weight.\n   *  - If pushing is enabled, take the position that went off-screen the least and push it\n   *      on-screen.\n   *  - If none of the previous criteria were met, use the position that goes off-screen the least.\n   * @docs-private\n   */\n  apply(): void {\n    // We shouldn't do anything if the strategy was disposed or we're on the server.\n    if (this._isDisposed || !this._platform.isBrowser) {\n      return;\n    }\n\n    // If the position has been applied already (e.g. when the overlay was opened) and the\n    // consumer opted into locking in the position, re-use the old position, in order to\n    // prevent the overlay from jumping around.\n    if (!this._isInitialRender && this._positionLocked && this._lastPosition) {\n      this.reapplyLastPosition();\n      return;\n    }\n\n    this._clearPanelClasses();\n    this._resetOverlayElementStyles();\n    this._resetBoundingBoxStyles();\n\n    // We need the bounding rects for the origin, the overlay and the container to determine how to position\n    // the overlay relative to the origin.\n    // We use the viewport rect to determine whether a position would go off-screen.\n    this._viewportRect = this._getNarrowedViewportRect();\n    this._originRect = this._getOriginRect();\n    this._overlayRect = this._pane.getBoundingClientRect();\n    this._containerRect = this._overlayContainer.getContainerElement().getBoundingClientRect();\n\n    const originRect = this._originRect;\n    const overlayRect = this._overlayRect;\n    const viewportRect = this._viewportRect;\n    const containerRect = this._containerRect;\n\n    // Positions where the overlay will fit with flexible dimensions.\n    const flexibleFits: FlexibleFit[] = [];\n\n    // Fallback if none of the preferred positions fit within the viewport.\n    let fallback: FallbackPosition | undefined;\n\n    // Go through each of the preferred positions looking for a good fit.\n    // If a good fit is found, it will be applied immediately.\n    for (let pos of this._preferredPositions) {\n      // Get the exact (x, y) coordinate for the point-of-origin on the origin element.\n      let originPoint = this._getOriginPoint(originRect, containerRect, pos);\n\n      // From that point-of-origin, get the exact (x, y) coordinate for the top-left corner of the\n      // overlay in this position. We use the top-left corner for calculations and later translate\n      // this into an appropriate (top, left, bottom, right) style.\n      let overlayPoint = this._getOverlayPoint(originPoint, overlayRect, pos);\n\n      // Calculate how well the overlay would fit into the viewport with this point.\n      let overlayFit = this._getOverlayFit(overlayPoint, overlayRect, viewportRect, pos);\n\n      // If the overlay, without any further work, fits into the viewport, use this position.\n      if (overlayFit.isCompletelyWithinViewport) {\n        this._isPushed = false;\n        this._applyPosition(pos, originPoint);\n        return;\n      }\n\n      // If the overlay has flexible dimensions, we can use this position\n      // so long as there's enough space for the minimum dimensions.\n      if (this._canFitWithFlexibleDimensions(overlayFit, overlayPoint, viewportRect)) {\n        // Save positions where the overlay will fit with flexible dimensions. We will use these\n        // if none of the positions fit *without* flexible dimensions.\n        flexibleFits.push({\n          position: pos,\n          origin: originPoint,\n          overlayRect,\n          boundingBoxRect: this._calculateBoundingBoxRect(originPoint, pos),\n        });\n\n        continue;\n      }\n\n      // If the current preferred position does not fit on the screen, remember the position\n      // if it has more visible area on-screen than we've seen and move onto the next preferred\n      // position.\n      if (!fallback || fallback.overlayFit.visibleArea < overlayFit.visibleArea) {\n        fallback = { overlayFit, overlayPoint, originPoint, position: pos, overlayRect };\n      }\n    }\n\n    // If there are any positions where the overlay would fit with flexible dimensions, choose the\n    // one that has the greatest area available modified by the position's weight\n    if (flexibleFits.length) {\n      let bestFit: FlexibleFit | null = null;\n      let bestScore = -1;\n      for (const fit of flexibleFits) {\n        const score = fit.boundingBoxRect.width * fit.boundingBoxRect.height * (fit.position.weight || 1);\n        if (score > bestScore) {\n          bestScore = score;\n          bestFit = fit;\n        }\n      }\n\n      this._isPushed = false;\n      this._applyPosition(bestFit!.position, bestFit!.origin);\n      return;\n    }\n\n    // When none of the preferred positions fit within the viewport, take the position\n    // that went off-screen the least and attempt to push it on-screen.\n    if (this._canPush) {\n      // TODO(jelbourn): after pushing, the opening \"direction\" of the overlay might not make sense.\n      this._isPushed = true;\n      this._applyPosition(fallback!.position, fallback!.originPoint);\n      return;\n    }\n\n    // All options for getting the overlay within the viewport have been exhausted, so go with the\n    // position that went off-screen the least.\n    this._applyPosition(fallback!.position, fallback!.originPoint);\n  }\n\n  detach(): void {\n    this._clearPanelClasses();\n    this._lastPosition = null;\n    this._previousPushAmount = null;\n    this._resizeSubscription.unsubscribe();\n  }\n\n  /** Cleanup after the element gets destroyed. */\n  dispose(): void {\n    if (this._isDisposed) {\n      return;\n    }\n\n    // We can't use `_resetBoundingBoxStyles` here, because it resets\n    // some properties to zero, rather than removing them.\n    if (this._boundingBox) {\n      extendStyles(this._boundingBox.style, {\n        top: '',\n        left: '',\n        right: '',\n        bottom: '',\n        height: '',\n        width: '',\n        alignItems: '',\n        justifyContent: '',\n      } as CSSStyleDeclaration);\n    }\n\n    if (this._pane) {\n      this._resetOverlayElementStyles();\n    }\n\n    if (this._overlayRef) {\n      this._overlayRef.hostElement.classList.remove(boundingBoxClass);\n    }\n\n    this.detach();\n    this._positionChanges.complete();\n    this._overlayRef = this._boundingBox = null!;\n    this._isDisposed = true;\n  }\n\n  /**\n   * This re-aligns the overlay element with the trigger in its last calculated position,\n   * even if a position higher in the \"preferred positions\" list would now fit. This\n   * allows one to re-align the panel without changing the orientation of the panel.\n   */\n  reapplyLastPosition(): void {\n    if (this._isDisposed || !this._platform.isBrowser) {\n      return;\n    }\n\n    const lastPosition = this._lastPosition;\n\n    if (lastPosition) {\n      this._originRect = this._getOriginRect();\n      this._overlayRect = this._pane.getBoundingClientRect();\n      this._viewportRect = this._getNarrowedViewportRect();\n      this._containerRect = this._overlayContainer.getContainerElement().getBoundingClientRect();\n\n      const originPoint = this._getOriginPoint(this._originRect, this._containerRect, lastPosition);\n      this._applyPosition(lastPosition, originPoint);\n    } else {\n      this.apply();\n    }\n  }\n\n  /**\n   * Sets the list of Scrollable containers that host the origin element so that\n   * on reposition we can evaluate if it or the overlay has been clipped or outside view. Every\n   * Scrollable must be an ancestor element of the strategy's origin element.\n   */\n  withScrollableContainers(scrollables: CdkScrollable[]): this {\n    this._scrollables = scrollables;\n    return this;\n  }\n\n  /**\n   * Adds new preferred positions.\n   * @param positions List of positions options for this overlay.\n   */\n  withPositions(positions: ConnectedPosition[]): this {\n    this._preferredPositions = positions;\n\n    // If the last calculated position object isn't part of the positions anymore, clear\n    // it in order to avoid it being picked up if the consumer tries to re-apply.\n    if (positions.indexOf(this._lastPosition!) === -1) {\n      this._lastPosition = null;\n    }\n\n    this._validatePositions();\n\n    return this;\n  }\n\n  /**\n   * Sets a minimum distance the overlay may be positioned to the edge of the viewport.\n   * @param margin Required margin between the overlay and the viewport edge in pixels.\n   */\n  withViewportMargin(margin: number): this {\n    this._viewportMargin = margin;\n    return this;\n  }\n\n  /** Sets whether the overlay's width and height can be constrained to fit within the viewport. */\n  withFlexibleDimensions(flexibleDimensions = true): this {\n    this._hasFlexibleDimensions = flexibleDimensions;\n    return this;\n  }\n\n  /** Sets whether the overlay can grow after the initial open via flexible width/height. */\n  withGrowAfterOpen(growAfterOpen = true): this {\n    this._growAfterOpen = growAfterOpen;\n    return this;\n  }\n\n  /** Sets whether the overlay can be pushed on-screen if none of the provided positions fit. */\n  withPush(canPush = true): this {\n    this._canPush = canPush;\n    return this;\n  }\n\n  /**\n   * Sets whether the overlay's position should be locked in after it is positioned\n   * initially. When an overlay is locked in, it won't attempt to reposition itself\n   * when the position is re-applied (e.g. when the user scrolls away).\n   * @param isLocked Whether the overlay should locked in.\n   */\n  withLockedPosition(isLocked = true): this {\n    this._positionLocked = isLocked;\n    return this;\n  }\n\n  /**\n   * Sets the origin, relative to which to position the overlay.\n   * Using an element origin is useful for building components that need to be positioned\n   * relatively to a trigger (e.g. dropdown menus or tooltips), whereas using a point can be\n   * used for cases like contextual menus which open relative to the user's pointer.\n   * @param origin Reference to the new origin.\n   */\n  setOrigin(origin: FlexibleConnectedPositionStrategyOrigin): this {\n    this._origin = origin;\n    return this;\n  }\n\n  /**\n   * Sets the default offset for the overlay's connection point on the x-axis.\n   * @param offset New offset in the X axis.\n   */\n  withDefaultOffsetX(offset: number): this {\n    this._offsetX = offset;\n    return this;\n  }\n\n  /**\n   * Sets the default offset for the overlay's connection point on the y-axis.\n   * @param offset New offset in the Y axis.\n   */\n  withDefaultOffsetY(offset: number): this {\n    this._offsetY = offset;\n    return this;\n  }\n\n  /**\n   * Configures that the position strategy should set a `transform-origin` on some elements\n   * inside the overlay, depending on the current position that is being applied. This is\n   * useful for the cases where the origin of an animation can change depending on the\n   * alignment of the overlay.\n   * @param selector CSS selector that will be used to find the target\n   *    elements onto which to set the transform origin.\n   */\n  withTransformOriginOn(selector: string): this {\n    this._transformOriginSelector = selector;\n    return this;\n  }\n\n  /**\n   * Gets the (x, y) coordinate of a connection point on the origin based on a relative position.\n   */\n  private _getOriginPoint(originRect: Dimensions, containerRect: Dimensions, pos: ConnectedPosition): Point {\n    let x: number;\n    if (pos.originX == 'center') {\n      // Note: when centering we should always use the `left`\n      // offset, otherwise the position will be wrong in RTL.\n      x = originRect.left + originRect.width / 2;\n    } else {\n      const startX = this._isRtl() ? originRect.right : originRect.left;\n      const endX = this._isRtl() ? originRect.left : originRect.right;\n      x = pos.originX == 'start' ? startX : endX;\n    }\n\n    // When zooming in Safari the container rectangle contains negative values for the position\n    // and we need to re-add them to the calculated coordinates.\n    if (containerRect.left < 0) {\n      x -= containerRect.left;\n    }\n\n    let y: number;\n    if (pos.originY == 'center') {\n      y = originRect.top + originRect.height / 2;\n    } else {\n      y = pos.originY == 'top' ? originRect.top : originRect.bottom;\n    }\n\n    // Normally the containerRect's top value would be zero, however when the overlay is attached to an input\n    // (e.g. in an autocomplete), mobile browsers will shift everything in order to put the input in the middle\n    // of the screen and to make space for the virtual keyboard. We need to account for this offset,\n    // otherwise our positioning will be thrown off.\n    // Additionally, when zooming in Safari this fixes the vertical position.\n    if (containerRect.top < 0) {\n      y -= containerRect.top;\n    }\n\n    return { x, y };\n  }\n\n  /**\n   * Gets the (x, y) coordinate of the top-left corner of the overlay given a given position and\n   * origin point to which the overlay should be connected.\n   */\n  private _getOverlayPoint(originPoint: Point, overlayRect: Dimensions, pos: ConnectedPosition): Point {\n    // Calculate the (overlayStartX, overlayStartY), the start of the\n    // potential overlay position relative to the origin point.\n    let overlayStartX: number;\n    if (pos.overlayX == 'center') {\n      overlayStartX = -overlayRect.width / 2;\n    } else if (pos.overlayX === 'start') {\n      overlayStartX = this._isRtl() ? -overlayRect.width : 0;\n    } else {\n      overlayStartX = this._isRtl() ? 0 : -overlayRect.width;\n    }\n\n    let overlayStartY: number;\n    if (pos.overlayY == 'center') {\n      overlayStartY = -overlayRect.height / 2;\n    } else {\n      overlayStartY = pos.overlayY == 'top' ? 0 : -overlayRect.height;\n    }\n\n    // The (x, y) coordinates of the overlay.\n    return {\n      x: originPoint.x + overlayStartX,\n      y: originPoint.y + overlayStartY,\n    };\n  }\n\n  /** Gets how well an overlay at the given point will fit within the viewport. */\n  private _getOverlayFit(\n    point: Point,\n    rawOverlayRect: Dimensions,\n    viewport: Dimensions,\n    position: ConnectedPosition,\n  ): OverlayFit {\n    // Round the overlay rect when comparing against the\n    // viewport, because the viewport is always rounded.\n    const overlay = getRoundedBoundingClientRect(rawOverlayRect);\n    let { x, y } = point;\n    let offsetX = this._getOffset(position, 'x');\n    let offsetY = this._getOffset(position, 'y');\n\n    // Account for the offsets since they could push the overlay out of the viewport.\n    if (offsetX) {\n      x += offsetX;\n    }\n\n    if (offsetY) {\n      y += offsetY;\n    }\n\n    // How much the overlay would overflow at this position, on each side.\n    let leftOverflow = 0 - x;\n    let rightOverflow = x + overlay.width - viewport.width;\n    let topOverflow = 0 - y;\n    let bottomOverflow = y + overlay.height - viewport.height;\n\n    // Visible parts of the element on each axis.\n    let visibleWidth = this._subtractOverflows(overlay.width, leftOverflow, rightOverflow);\n    let visibleHeight = this._subtractOverflows(overlay.height, topOverflow, bottomOverflow);\n    let visibleArea = visibleWidth * visibleHeight;\n\n    return {\n      visibleArea,\n      isCompletelyWithinViewport: overlay.width * overlay.height === visibleArea,\n      fitsInViewportVertically: visibleHeight === overlay.height,\n      fitsInViewportHorizontally: visibleWidth == overlay.width,\n    };\n  }\n\n  /**\n   * Whether the overlay can fit within the viewport when it may resize either its width or height.\n   * @param fit How well the overlay fits in the viewport at some position.\n   * @param point The (x, y) coordinates of the overlay at some position.\n   * @param viewport The geometry of the viewport.\n   */\n  private _canFitWithFlexibleDimensions(fit: OverlayFit, point: Point, viewport: Dimensions) {\n    if (this._hasFlexibleDimensions) {\n      const availableHeight = viewport.bottom - point.y;\n      const availableWidth = viewport.right - point.x;\n      const minHeight = getPixelValue(this._overlayRef.getConfig().minHeight);\n      const minWidth = getPixelValue(this._overlayRef.getConfig().minWidth);\n\n      const verticalFit = fit.fitsInViewportVertically || (minHeight != null && minHeight <= availableHeight);\n      const horizontalFit = fit.fitsInViewportHorizontally || (minWidth != null && minWidth <= availableWidth);\n\n      return verticalFit && horizontalFit;\n    }\n    return false;\n  }\n\n  /**\n   * Gets the point at which the overlay can be \"pushed\" on-screen. If the overlay is larger than\n   * the viewport, the top-left corner will be pushed on-screen (with overflow occurring on the\n   * right and bottom).\n   *\n   * @param start Starting point from which the overlay is pushed.\n   * @param rawOverlayRect Dimensions of the overlay.\n   * @param scrollPosition Current viewport scroll position.\n   * @returns The point at which to position the overlay after pushing. This is effectively a new\n   *     originPoint.\n   */\n  private _pushOverlayOnScreen(\n    start: Point,\n    rawOverlayRect: Dimensions,\n    scrollPosition: ViewportScrollPosition,\n  ): Point {\n    // If the position is locked and we've pushed the overlay already, reuse the previous push\n    // amount, rather than pushing it again. If we were to continue pushing, the element would\n    // remain in the viewport, which goes against the expectations when position locking is enabled.\n    if (this._previousPushAmount && this._positionLocked) {\n      return {\n        x: start.x + this._previousPushAmount.x,\n        y: start.y + this._previousPushAmount.y,\n      };\n    }\n\n    // Round the overlay rect when comparing against the\n    // viewport, because the viewport is always rounded.\n    const overlay = getRoundedBoundingClientRect(rawOverlayRect);\n    const viewport = this._viewportRect;\n\n    // Determine how much the overlay goes outside the viewport on each\n    // side, which we'll use to decide which direction to push it.\n    const overflowRight = Math.max(start.x + overlay.width - viewport.width, 0);\n    const overflowBottom = Math.max(start.y + overlay.height - viewport.height, 0);\n    const overflowTop = Math.max(viewport.top - scrollPosition.top - start.y, 0);\n    const overflowLeft = Math.max(viewport.left - scrollPosition.left - start.x, 0);\n\n    // Amount by which to push the overlay in each axis such that it remains on-screen.\n    let pushX = 0;\n    let pushY = 0;\n\n    // If the overlay fits completely within the bounds of the viewport, push it from whichever\n    // direction is goes off-screen. Otherwise, push the top-left corner such that its in the\n    // viewport and allow for the trailing end of the overlay to go out of bounds.\n    if (overlay.width <= viewport.width) {\n      pushX = overflowLeft || -overflowRight;\n    } else {\n      pushX = start.x < this._viewportMargin ? viewport.left - scrollPosition.left - start.x : 0;\n    }\n\n    if (overlay.height <= viewport.height) {\n      pushY = overflowTop || -overflowBottom;\n    } else {\n      pushY = start.y < this._viewportMargin ? viewport.top - scrollPosition.top - start.y : 0;\n    }\n\n    this._previousPushAmount = { x: pushX, y: pushY };\n\n    return {\n      x: start.x + pushX,\n      y: start.y + pushY,\n    };\n  }\n\n  /**\n   * Applies a computed position to the overlay and emits a position change.\n   * @param position The position preference\n   * @param originPoint The point on the origin element where the overlay is connected.\n   */\n  private _applyPosition(position: ConnectedPosition, originPoint: Point) {\n    this._setTransformOrigin(position);\n    this._setOverlayElementStyles(originPoint, position);\n    this._setBoundingBoxStyles(originPoint, position);\n\n    if (position.panelClass) {\n      this._addPanelClasses(position.panelClass);\n    }\n\n    // Save the last connected position in case the position needs to be re-calculated.\n    this._lastPosition = position;\n\n    // Notify that the position has been changed along with its change properties.\n    // We only emit if we've got any subscriptions, because the scroll visibility\n    // calculations can be somewhat expensive.\n    if (this._positionChanges.observers.length) {\n      const scrollableViewProperties = this._getScrollVisibility();\n      const changeEvent = new ConnectedOverlayPositionChange(position, scrollableViewProperties);\n      this._positionChanges.next(changeEvent);\n    }\n\n    this._isInitialRender = false;\n  }\n\n  /** Sets the transform origin based on the configured selector and the passed-in position.  */\n  private _setTransformOrigin(position: ConnectedPosition) {\n    if (!this._transformOriginSelector) {\n      return;\n    }\n\n    const elements: NodeListOf<HTMLElement> = this._boundingBox!.querySelectorAll(this._transformOriginSelector);\n    let xOrigin: 'left' | 'right' | 'center';\n    let yOrigin: 'top' | 'bottom' | 'center' = position.overlayY;\n\n    if (position.overlayX === 'center') {\n      xOrigin = 'center';\n    } else if (this._isRtl()) {\n      xOrigin = position.overlayX === 'start' ? 'right' : 'left';\n    } else {\n      xOrigin = position.overlayX === 'start' ? 'left' : 'right';\n    }\n\n    for (let i = 0; i < elements.length; i++) {\n      elements[i].style.transformOrigin = `${xOrigin} ${yOrigin}`;\n    }\n  }\n\n  /**\n   * Gets the position and size of the overlay's sizing container.\n   *\n   * This method does no measuring and applies no styles so that we can cheaply compute the\n   * bounds for all positions and choose the best fit based on these results.\n   */\n  private _calculateBoundingBoxRect(origin: Point, position: ConnectedPosition): BoundingBoxRect {\n    const viewport = this._viewportRect;\n    const isRtl = this._isRtl();\n    let height: number, top: number, bottom: number;\n\n    if (position.overlayY === 'top') {\n      // Overlay is opening \"downward\" and thus is bound by the bottom viewport edge.\n      top = origin.y;\n      height = viewport.height - top + this._viewportMargin;\n    } else if (position.overlayY === 'bottom') {\n      // Overlay is opening \"upward\" and thus is bound by the top viewport edge. We need to add\n      // the viewport margin back in, because the viewport rect is narrowed down to remove the\n      // margin, whereas the `origin` position is calculated based on its `DOMRect`.\n      bottom = viewport.height - origin.y + this._viewportMargin * 2;\n      height = viewport.height - bottom + this._viewportMargin;\n    } else {\n      // If neither top nor bottom, it means that the overlay is vertically centered on the\n      // origin point. Note that we want the position relative to the viewport, rather than\n      // the page, which is why we don't use something like `viewport.bottom - origin.y` and\n      // `origin.y - viewport.top`.\n      const smallestDistanceToViewportEdge = Math.min(viewport.bottom - origin.y + viewport.top, origin.y);\n\n      const previousHeight = this._lastBoundingBoxSize.height;\n\n      height = smallestDistanceToViewportEdge * 2;\n      top = origin.y - smallestDistanceToViewportEdge;\n\n      if (height > previousHeight && !this._isInitialRender && !this._growAfterOpen) {\n        top = origin.y - previousHeight / 2;\n      }\n    }\n\n    // The overlay is opening 'right-ward' (the content flows to the right).\n    const isBoundedByRightViewportEdge =\n      (position.overlayX === 'start' && !isRtl) || (position.overlayX === 'end' && isRtl);\n\n    // The overlay is opening 'left-ward' (the content flows to the left).\n    const isBoundedByLeftViewportEdge =\n      (position.overlayX === 'end' && !isRtl) || (position.overlayX === 'start' && isRtl);\n\n    let width: number, left: number, right: number;\n\n    if (isBoundedByLeftViewportEdge) {\n      right = viewport.width - origin.x + this._viewportMargin;\n      width = origin.x - this._viewportMargin;\n    } else if (isBoundedByRightViewportEdge) {\n      left = origin.x;\n      width = viewport.right - origin.x;\n    } else {\n      // If neither start nor end, it means that the overlay is horizontally centered on the\n      // origin point. Note that we want the position relative to the viewport, rather than\n      // the page, which is why we don't use something like `viewport.right - origin.x` and\n      // `origin.x - viewport.left`.\n      const smallestDistanceToViewportEdge = Math.min(viewport.right - origin.x + viewport.left, origin.x);\n      const previousWidth = this._lastBoundingBoxSize.width;\n\n      width = smallestDistanceToViewportEdge * 2;\n      left = origin.x - smallestDistanceToViewportEdge;\n\n      if (width > previousWidth && !this._isInitialRender && !this._growAfterOpen) {\n        left = origin.x - previousWidth / 2;\n      }\n    }\n\n    return { top: top!, left: left!, bottom: bottom!, right: right!, width, height };\n  }\n\n  /**\n   * Sets the position and size of the overlay's sizing wrapper. The wrapper is positioned on the\n   * origin's connection point and stretches to the bounds of the viewport.\n   *\n   * @param origin The point on the origin element where the overlay is connected.\n   * @param position The position preference\n   */\n  private _setBoundingBoxStyles(origin: Point, position: ConnectedPosition): void {\n    const boundingBoxRect = this._calculateBoundingBoxRect(origin, position);\n\n    // It's weird if the overlay *grows* while scrolling, so we take the last size into account\n    // when applying a new size.\n    if (!this._isInitialRender && !this._growAfterOpen) {\n      boundingBoxRect.height = Math.min(boundingBoxRect.height, this._lastBoundingBoxSize.height);\n      boundingBoxRect.width = Math.min(boundingBoxRect.width, this._lastBoundingBoxSize.width);\n    }\n\n    const styles = {} as CSSStyleDeclaration;\n\n    if (this._hasExactPosition()) {\n      styles.top = styles.left = '0';\n      styles.bottom = styles.right = styles.maxHeight = styles.maxWidth = '';\n      styles.width = styles.height = '100%';\n    } else {\n      const maxHeight = this._overlayRef.getConfig().maxHeight;\n      const maxWidth = this._overlayRef.getConfig().maxWidth;\n\n      styles.height = coerceCssPixelValue(boundingBoxRect.height);\n      styles.top = coerceCssPixelValue(boundingBoxRect.top);\n      styles.bottom = coerceCssPixelValue(boundingBoxRect.bottom);\n      styles.width = coerceCssPixelValue(boundingBoxRect.width);\n      styles.left = coerceCssPixelValue(boundingBoxRect.left);\n      styles.right = coerceCssPixelValue(boundingBoxRect.right);\n\n      // Push the pane content towards the proper direction.\n      if (position.overlayX === 'center') {\n        styles.alignItems = 'center';\n      } else {\n        styles.alignItems = position.overlayX === 'end' ? 'flex-end' : 'flex-start';\n      }\n\n      if (position.overlayY === 'center') {\n        styles.justifyContent = 'center';\n      } else {\n        styles.justifyContent = position.overlayY === 'bottom' ? 'flex-end' : 'flex-start';\n      }\n\n      if (maxHeight) {\n        styles.maxHeight = coerceCssPixelValue(maxHeight);\n      }\n\n      if (maxWidth) {\n        styles.maxWidth = coerceCssPixelValue(maxWidth);\n      }\n    }\n\n    this._lastBoundingBoxSize = boundingBoxRect;\n\n    extendStyles(this._boundingBox!.style, styles);\n  }\n\n  /** Resets the styles for the bounding box so that a new positioning can be computed. */\n  private _resetBoundingBoxStyles() {\n    extendStyles(this._boundingBox!.style, {\n      top: '0',\n      left: '0',\n      right: '0',\n      bottom: '0',\n      height: '',\n      width: '',\n      alignItems: '',\n      justifyContent: '',\n    } as CSSStyleDeclaration);\n  }\n\n  /** Resets the styles for the overlay pane so that a new positioning can be computed. */\n  private _resetOverlayElementStyles() {\n    extendStyles(this._pane.style, {\n      top: '',\n      left: '',\n      bottom: '',\n      right: '',\n      position: '',\n      transform: '',\n    } as CSSStyleDeclaration);\n  }\n\n  /** Sets positioning styles to the overlay element. */\n  private _setOverlayElementStyles(originPoint: Point, position: ConnectedPosition): void {\n    const styles = {} as CSSStyleDeclaration;\n    const hasExactPosition = this._hasExactPosition();\n    const hasFlexibleDimensions = this._hasFlexibleDimensions;\n    const config = this._overlayRef.getConfig();\n\n    if (hasExactPosition) {\n      const scrollPosition = this._viewportRuler.getViewportScrollPosition();\n      extendStyles(styles, this._getExactOverlayY(position, originPoint, scrollPosition));\n      extendStyles(styles, this._getExactOverlayX(position, originPoint, scrollPosition));\n    } else {\n      styles.position = 'static';\n    }\n\n    // Use a transform to apply the offsets. We do this because the `center` positions rely on\n    // being in the normal flex flow and setting a `top` / `left` at all will completely throw\n    // off the position. We also can't use margins, because they won't have an effect in some\n    // cases where the element doesn't have anything to \"push off of\". Finally, this works\n    // better both with flexible and non-flexible positioning.\n    let transformString = '';\n    let offsetX = this._getOffset(position, 'x');\n    let offsetY = this._getOffset(position, 'y');\n\n    if (offsetX) {\n      transformString += `translateX(${offsetX}px) `;\n    }\n\n    if (offsetY) {\n      transformString += `translateY(${offsetY}px)`;\n    }\n\n    styles.transform = transformString.trim();\n\n    // If a maxWidth or maxHeight is specified on the overlay, we remove them. We do this because\n    // we need these values to both be set to \"100%\" for the automatic flexible sizing to work.\n    // The maxHeight and maxWidth are set on the boundingBox in order to enforce the constraint.\n    // Note that this doesn't apply when we have an exact position, in which case we do want to\n    // apply them because they'll be cleared from the bounding box.\n    if (config.maxHeight) {\n      if (hasExactPosition) {\n        styles.maxHeight = coerceCssPixelValue(config.maxHeight);\n      } else if (hasFlexibleDimensions) {\n        styles.maxHeight = '';\n      }\n    }\n\n    if (config.maxWidth) {\n      if (hasExactPosition) {\n        styles.maxWidth = coerceCssPixelValue(config.maxWidth);\n      } else if (hasFlexibleDimensions) {\n        styles.maxWidth = '';\n      }\n    }\n\n    extendStyles(this._pane.style, styles);\n  }\n\n  /** Gets the exact top/bottom for the overlay when not using flexible sizing or when pushing. */\n  private _getExactOverlayY(position: ConnectedPosition, originPoint: Point, scrollPosition: ViewportScrollPosition) {\n    // Reset any existing styles. This is necessary in case the\n    // preferred position has changed since the last `apply`.\n    let styles = { top: '', bottom: '' } as CSSStyleDeclaration;\n    let overlayPoint = this._getOverlayPoint(originPoint, this._overlayRect, position);\n\n    if (this._isPushed) {\n      overlayPoint = this._pushOverlayOnScreen(overlayPoint, this._overlayRect, scrollPosition);\n    }\n\n    // We want to set either `top` or `bottom` based on whether the overlay wants to appear\n    // above or below the origin and the direction in which the element will expand.\n    if (position.overlayY === 'bottom') {\n      // When using `bottom`, we adjust the y position such that it is the distance\n      // from the bottom of the viewport rather than the top.\n      const documentHeight = this._document.documentElement!.clientHeight;\n      styles.bottom = `${documentHeight - (overlayPoint.y + this._overlayRect.height)}px`;\n    } else {\n      styles.top = coerceCssPixelValue(overlayPoint.y);\n    }\n\n    return styles;\n  }\n\n  /** Gets the exact left/right for the overlay when not using flexible sizing or when pushing. */\n  private _getExactOverlayX(position: ConnectedPosition, originPoint: Point, scrollPosition: ViewportScrollPosition) {\n    // Reset any existing styles. This is necessary in case the preferred position has\n    // changed since the last `apply`.\n    let styles = { left: '', right: '' } as CSSStyleDeclaration;\n    let overlayPoint = this._getOverlayPoint(originPoint, this._overlayRect, position);\n\n    if (this._isPushed) {\n      overlayPoint = this._pushOverlayOnScreen(overlayPoint, this._overlayRect, scrollPosition);\n    }\n\n    // We want to set either `left` or `right` based on whether the overlay wants to appear \"before\"\n    // or \"after\" the origin, which determines the direction in which the element will expand.\n    // For the horizontal axis, the meaning of \"before\" and \"after\" change based on whether the\n    // page is in RTL or LTR.\n    let horizontalStyleProperty: 'left' | 'right';\n\n    if (this._isRtl()) {\n      horizontalStyleProperty = position.overlayX === 'end' ? 'left' : 'right';\n    } else {\n      horizontalStyleProperty = position.overlayX === 'end' ? 'right' : 'left';\n    }\n\n    // When we're setting `right`, we adjust the x position such that it is the distance\n    // from the right edge of the viewport rather than the left edge.\n    if (horizontalStyleProperty === 'right') {\n      const documentWidth = this._document.documentElement!.clientWidth;\n      styles.right = `${documentWidth - (overlayPoint.x + this._overlayRect.width)}px`;\n    } else {\n      styles.left = coerceCssPixelValue(overlayPoint.x);\n    }\n\n    return styles;\n  }\n\n  /**\n   * Gets the view properties of the trigger and overlay, including whether they are clipped\n   * or completely outside the view of any of the strategy's scrollables.\n   */\n  private _getScrollVisibility(): ScrollingVisibility {\n    // Note: needs fresh rects since the position could've changed.\n    const originBounds = this._getOriginRect();\n    const overlayBounds = this._pane.getBoundingClientRect();\n\n    // TODO(jelbourn): instead of needing all of the client rects for these scrolling containers\n    // every time, we should be able to use the scrollTop of the containers if the size of those\n    // containers hasn't changed.\n    const scrollContainerBounds = this._scrollables.map(scrollable => {\n      return scrollable.getElementRef().nativeElement.getBoundingClientRect();\n    });\n\n    return {\n      isOriginClipped: isElementClippedByScrolling(originBounds, scrollContainerBounds),\n      isOriginOutsideView: isElementScrolledOutsideView(originBounds, scrollContainerBounds),\n      isOverlayClipped: isElementClippedByScrolling(overlayBounds, scrollContainerBounds),\n      isOverlayOutsideView: isElementScrolledOutsideView(overlayBounds, scrollContainerBounds),\n    };\n  }\n\n  /** Subtracts the amount that an element is overflowing on an axis from its length. */\n  private _subtractOverflows(length: number, ...overflows: number[]): number {\n    return overflows.reduce((currentValue: number, currentOverflow: number) => {\n      return currentValue - Math.max(currentOverflow, 0);\n    }, length);\n  }\n\n  /** Narrows the given viewport rect by the current _viewportMargin. */\n  private _getNarrowedViewportRect(): Dimensions {\n    // We recalculate the viewport rect here ourselves, rather than using the ViewportRuler,\n    // because we want to use the `clientWidth` and `clientHeight` as the base. The difference\n    // being that the client properties don't include the scrollbar, as opposed to `innerWidth`\n    // and `innerHeight` that do. This is necessary, because the overlay container uses\n    // 100% `width` and `height` which don't include the scrollbar either.\n    const width = this._document.documentElement!.clientWidth;\n    const height = this._document.documentElement!.clientHeight;\n    const scrollPosition = this._viewportRuler.getViewportScrollPosition();\n\n    return {\n      top: scrollPosition.top + this._viewportMargin,\n      left: scrollPosition.left + this._viewportMargin,\n      right: scrollPosition.left + width - this._viewportMargin,\n      bottom: scrollPosition.top + height - this._viewportMargin,\n      width: width - 2 * this._viewportMargin,\n      height: height - 2 * this._viewportMargin,\n    };\n  }\n\n  /** Whether the we're dealing with an RTL context */\n  private _isRtl() {\n    return this._overlayRef.getDirection() === 'rtl';\n  }\n\n  /** Determines whether the overlay uses exact or flexible positioning. */\n  private _hasExactPosition() {\n    return !this._hasFlexibleDimensions || this._isPushed;\n  }\n\n  /** Retrieves the offset of a position along the x or y axis. */\n  private _getOffset(position: ConnectedPosition, axis: 'x' | 'y') {\n    if (axis === 'x') {\n      // We don't do something like `position['offset' + axis]` in\n      // order to avoid breaking minifiers that rename properties.\n      return position.offsetX == null ? this._offsetX : position.offsetX;\n    }\n\n    return position.offsetY == null ? this._offsetY : position.offsetY;\n  }\n\n  /** Validates that the current position match the expected values. */\n  private _validatePositions(): void {\n    if (true) {\n      if (!this._preferredPositions.length) {\n        throw Error('FlexibleConnectedPositionStrategy: At least one position is required.');\n      }\n\n      // TODO(crisbeto): remove these once Angular's template type\n      // checking is advanced enough to catch these cases.\n      this._preferredPositions.forEach(pair => {\n        validateHorizontalPosition('originX', pair.originX);\n        validateVerticalPosition('originY', pair.originY);\n        validateHorizontalPosition('overlayX', pair.overlayX);\n        validateVerticalPosition('overlayY', pair.overlayY);\n      });\n    }\n  }\n\n  /** Adds a single CSS class or an array of classes on the overlay panel. */\n  private _addPanelClasses(cssClasses: string | string[]) {\n    if (this._pane) {\n      coerceArray(cssClasses).forEach(cssClass => {\n        if (cssClass !== '' && this._appliedPanelClasses.indexOf(cssClass) === -1) {\n          this._appliedPanelClasses.push(cssClass);\n          this._pane.classList.add(cssClass);\n        }\n      });\n    }\n  }\n\n  /** Clears the classes that the position strategy has applied from the overlay panel. */\n  private _clearPanelClasses() {\n    if (this._pane) {\n      this._appliedPanelClasses.forEach(cssClass => {\n        this._pane.classList.remove(cssClass);\n      });\n      this._appliedPanelClasses = [];\n    }\n  }\n\n  /** Returns the DOMRect of the current origin. */\n  private _getOriginRect(): Dimensions {\n    const origin = this._origin;\n\n    if (origin instanceof ElementRef) {\n      return origin.nativeElement.getBoundingClientRect();\n    }\n\n    // Check for Element so SVG elements are also supported.\n    if (origin instanceof Element) {\n      return origin.getBoundingClientRect();\n    }\n\n    const width = origin.width || 0;\n    const height = origin.height || 0;\n\n    // If the origin is a point, return a client rect as if it was a 0x0 element at the point.\n    return {\n      top: origin.y,\n      bottom: origin.y + height,\n      left: origin.x,\n      right: origin.x + width,\n      height,\n      width,\n    };\n  }\n}\n\n/** A simple (x, y) coordinate. */\ninterface Point {\n  x: number;\n  y: number;\n}\n\n/** Record of measurements for how an overlay (at a given position) fits into the viewport. */\ninterface OverlayFit {\n  /** Whether the overlay fits completely in the viewport. */\n  isCompletelyWithinViewport: boolean;\n\n  /** Whether the overlay fits in the viewport on the y-axis. */\n  fitsInViewportVertically: boolean;\n\n  /** Whether the overlay fits in the viewport on the x-axis. */\n  fitsInViewportHorizontally: boolean;\n\n  /** The total visible area (in px^2) of the overlay inside the viewport. */\n  visibleArea: number;\n}\n\n/** Record of the measurements determining whether an overlay will fit in a specific position. */\ninterface FallbackPosition {\n  position: ConnectedPosition;\n  originPoint: Point;\n  overlayPoint: Point;\n  overlayFit: OverlayFit;\n  overlayRect: Dimensions;\n}\n\n/** Position and size of the overlay sizing wrapper for a specific position. */\ninterface BoundingBoxRect {\n  top: number;\n  left: number;\n  bottom: number;\n  right: number;\n  height: number;\n  width: number;\n}\n\n/** Record of measures determining how well a given position will fit with flexible dimensions. */\ninterface FlexibleFit {\n  position: ConnectedPosition;\n  origin: Point;\n  overlayRect: Dimensions;\n  boundingBoxRect: BoundingBoxRect;\n}\n\n/** A connected position as specified by the user. */\nexport interface ConnectedPosition {\n  originX: 'start' | 'center' | 'end';\n  originY: 'top' | 'center' | 'bottom';\n\n  overlayX: 'start' | 'center' | 'end';\n  overlayY: 'top' | 'center' | 'bottom';\n\n  weight?: number;\n  offsetX?: number;\n  offsetY?: number;\n  panelClass?: string | string[];\n}\n\n/** Shallow-extends a stylesheet object with another stylesheet object. */\nfunction extendStyles(destination: CSSStyleDeclaration, source: CSSStyleDeclaration): CSSStyleDeclaration {\n  for (let key in source) {\n    if (source.hasOwnProperty(key)) {\n      destination[key] = source[key];\n    }\n  }\n\n  return destination;\n}\n\n/**\n * Extracts the pixel value as a number from a value, if it's a number\n * or a CSS pixel string (e.g. `1337px`). Otherwise returns null.\n */\nfunction getPixelValue(input: number | string | null | undefined): number | null {\n  if (typeof input !== 'number' && input != null) {\n    const [value, units] = input.split(cssUnitPattern);\n    return !units || units === 'px' ? parseFloat(value) : null;\n  }\n\n  return (input as any) || null;\n}\n\n/**\n * Gets a version of an element's bounding `DOMRect` where all the values are rounded down to\n * the nearest pixel. This allows us to account for the cases where there may be sub-pixel\n * deviations in the `DOMRect` returned by the browser (e.g. when zoomed in with a percentage\n * size, see #21350).\n */\nfunction getRoundedBoundingClientRect(clientRect: Dimensions): Dimensions {\n  return {\n    top: Math.floor(clientRect.top),\n    right: Math.floor(clientRect.right),\n    bottom: Math.floor(clientRect.bottom),\n    left: Math.floor(clientRect.left),\n    width: Math.floor(clientRect.width),\n    height: Math.floor(clientRect.height),\n  };\n}\n\nexport const STANDARD_DROPDOWN_BELOW_POSITIONS: ConnectedPosition[] = [\n  { originX: 'start', originY: 'bottom', overlayX: 'start', overlayY: 'top' },\n  { originX: 'start', originY: 'top', overlayX: 'start', overlayY: 'bottom' },\n  { originX: 'end', originY: 'bottom', overlayX: 'end', overlayY: 'top' },\n  { originX: 'end', originY: 'top', overlayX: 'end', overlayY: 'bottom' },\n];\n\nexport const STANDARD_DROPDOWN_ADJACENT_POSITIONS: ConnectedPosition[] = [\n  { originX: 'end', originY: 'top', overlayX: 'start', overlayY: 'top' },\n  { originX: 'end', originY: 'bottom', overlayX: 'start', overlayY: 'bottom' },\n  { originX: 'start', originY: 'top', overlayX: 'end', overlayY: 'top' },\n  { originX: 'start', originY: 'bottom', overlayX: 'end', overlayY: 'bottom' },\n];\n","import { Overlay, OverlayContainer, OverlayRef, ViewportRuler } from '@angular/cdk/overlay';\nimport { Platform } from '@angular/cdk/platform';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { DOCUMENT } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  HostListener,\n  Inject,\n  Input,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { Subject, Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { Article } from '../api/article';\nimport { HelpExtService } from '../api/help-ext.service';\nimport { HelpExtFlyoutComponent } from '../help-ext-flyout/help-ext-flyout.component';\nimport { FlexibleConnectedPositionStrategy17 } from './flexible-connected-position-strategy-v17';\n\nconst FLYOUT_SHOW_HIDE_DELAY = 100;\n\n@Component({\n  selector: 'help-ext',\n  templateUrl: './help-ext.template.html',\n  host: {\n    class: 'help-ext',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class HelpExtComponent implements OnDestroy, OnInit {\n  private _article: Article;\n  public get article(): Article {\n    return this._article;\n  }\n  public set article(value: Article) {\n    this._article = value;\n    this._cdr.markForCheck();\n  }\n\n  private _routerEventsSubscription: Subscription;\n  private _articleId: number;\n  private _articleUid: string;\n  private _byLocation: boolean;\n\n  @Input()\n  get articleId(): number {\n    return this._articleId;\n  }\n  set articleId(value: number) {\n    if (this.articleUid) throw Error('Do not use articleId with articleUid');\n    if (this.byLocation) throw Error('Do not use articleId with byLocation');\n\n    if (this._articleId === value) return;\n\n    this._articleId = value;\n\n    if (!value) return;\n    this._api.getArticleById(value).subscribe(\n      article => (this.article = article),\n      () => (this.article = null),\n    );\n  }\n\n  @Input()\n  get articleUid(): string {\n    return this._articleUid;\n  }\n  set articleUid(value: string) {\n    if (this.articleId) throw Error('Do not use articleUid with articleId');\n    if (this.byLocation) throw Error('Do not use articleUid with byLocation');\n\n    if (this._articleUid === value) return;\n\n    this._articleUid = value;\n\n    if (!value) return;\n    this._api.getArticleByUid(location.origin, value).subscribe(\n      article => (this.article = article),\n      () => (this.article = null),\n    );\n  }\n\n  @Input()\n  get byLocation(): boolean {\n    return this._byLocation;\n  }\n  set byLocation(value: boolean) {\n    if (this.articleId) throw Error('Do not use byLocation with articleId');\n    if (this.articleUid) throw Error('Do not use byLocation with articleUid');\n\n    if (this._byLocation === value) return;\n\n    this._byLocation = value;\n\n    if (value) {\n      this.updateFromLocation();\n      this._routerEventsSubscription = this._router.events\n        .pipe(filter(event => event instanceof NavigationEnd))\n        .subscribe(() => {\n          this.updateFromLocation();\n        });\n    } else {\n      this._routerEventsSubscription?.unsubscribe();\n    }\n  }\n\n  @Input()\n  alwaysVisible: boolean = true;\n\n  @Input()\n  inline: boolean = false;\n\n  @ViewChild('helpQuestion', { static: true })\n  private _helpQuestionElement: ElementRef;\n\n  private _overlayRef: OverlayRef;\n  private _portal: ComponentPortal<HelpExtFlyoutComponent>;\n  private _flyoutInstance: HelpExtFlyoutComponent;\n\n  private _onDestroy = new Subject<void>();\n\n  private _showTimeoutId: ReturnType<typeof setTimeout> | undefined;\n  private _hideTimeoutId: ReturnType<typeof setTimeout> | undefined;\n\n  @HostListener('mouseenter')\n  _onMouseEnter() {\n    if (!this.article) return;\n\n    this.show(FLYOUT_SHOW_HIDE_DELAY);\n  }\n\n  @HostListener('mouseleave')\n  _onMouseLeave() {\n    this.hide(FLYOUT_SHOW_HIDE_DELAY);\n  }\n\n  private show(delay: number): void {\n    clearTimeout(this._hideTimeoutId);\n    clearTimeout(this._showTimeoutId);\n    if (this._flyoutInstance) return;\n\n    this._showTimeoutId = setTimeout(() => {\n      this._flyoutInstance = this._overlayRef.attach(this._portal).instance;\n      this._flyoutInstance.article = this.article;\n      this._flyoutInstance.mouseEnter.subscribe(() => this.show(FLYOUT_SHOW_HIDE_DELAY));\n      this._flyoutInstance.mouseLeave.subscribe(() => this.hide(FLYOUT_SHOW_HIDE_DELAY));\n      this._flyoutInstance.show();\n\n      setTimeout(() => this._overlayRef.updatePosition());\n\n      this._showTimeoutId = undefined;\n    }, delay);\n  }\n\n  private hide(delay: number): void {\n    clearTimeout(this._hideTimeoutId);\n    clearTimeout(this._showTimeoutId);\n    if (!this._flyoutInstance) return;\n\n    this._hideTimeoutId = setTimeout(() => {\n      this._hideTimeoutId = undefined;\n\n      this._flyoutInstance.hide();\n      this._flyoutInstance.afterHidden.subscribe(() => {\n        this._overlayRef.detach();\n        this._flyoutInstance = undefined;\n      });\n    }, delay);\n  }\n\n  constructor(\n    private readonly _cdr: ChangeDetectorRef,\n    private readonly _router: Router,\n    private readonly _overlay: Overlay,\n    private readonly _api: HelpExtService,\n    private readonly _viewportRuler: ViewportRuler,\n    @Inject(DOCUMENT) private readonly _document: any,\n    private readonly _platform: Platform,\n    private readonly _overlayContainer: OverlayContainer,\n  ) {}\n\n  ngOnInit(): void {\n    this._portal = new ComponentPortal(HelpExtFlyoutComponent);\n\n    const positionStrategy = new FlexibleConnectedPositionStrategy17(\n      this._helpQuestionElement,\n      this._viewportRuler,\n      this._document,\n      this._platform,\n      this._overlayContainer,\n    )\n      .withFlexibleDimensions(false)\n      .withGrowAfterOpen(true)\n      .withPush(true)\n      .withPositions([\n        { originX: 'center', originY: 'bottom', overlayX: 'center', overlayY: 'top' }, // bottom\n        { originX: 'end', originY: 'center', overlayX: 'start', overlayY: 'center' }, // right\n        { originX: 'start', originY: 'center', overlayX: 'end', overlayY: 'center' }, // left\n        { originX: 'end', originY: 'center', overlayX: 'start', overlayY: 'top' }, // force right\n        { originX: 'start', originY: 'center', overlayX: 'end', overlayY: 'top' }, // force left\n        { originX: 'center', originY: 'top', overlayX: 'center', overlayY: 'bottom' }, // top\n      ]);\n    const scrollStrategy = this._overlay.scrollStrategies.reposition();\n    this._overlayRef = this._overlay.create({\n      positionStrategy: positionStrategy,\n      scrollStrategy: scrollStrategy,\n      //maxHeight: window.innerHeight - this._helpQuestionElement.nativeElement.getBoundingClientRect().bottom,\n      maxWidth: 'min(920px, 100vw)',\n      panelClass: 'help-ext-panel',\n    });\n  }\n\n  ngOnDestroy(): void {\n    this._onDestroy.next();\n    this._onDestroy.complete();\n    this._routerEventsSubscription?.unsubscribe();\n  }\n\n  private updateFromLocation(): void {\n    this._api.getArticleByUrl(location.origin + location.pathname).subscribe(\n      article => (this.article = article),\n      () => (this.article = null),\n    );\n  }\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input } from '@angular/core';\nimport { Article } from '../api/article';\nimport { HelpExtService } from '../api/help-ext.service';\n\n@Component({\n  selector: 'help-ext-article-content',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class HelpExtArticleContentComponent {\n  /**\n   * @deprecated Use content instead\n   * @see `content`\n   */\n  @Input()\n  set article(value: Article) {\n    this.content = value?.content;\n  }\n\n  @Input()\n  set content(value: string) {\n    this._api.baseAddress.subscribe(baseAddress => {\n      this._el.nativeElement.innerHTML = this._api.sanitizeContent(value);\n      this._api.makeAbsoluteLinks(this._el, baseAddress, '_blank');\n      this._cdr.markForCheck();\n    });\n  }\n\n  constructor(\n    private readonly _el: ElementRef,\n    private readonly _api: HelpExtService,\n    private readonly _cdr: ChangeDetectorRef,\n  ) {}\n}\n","import { Directive, Input } from '@angular/core';\nimport { HelpExtService } from '../api/help-ext.service';\nimport { HelpExtArticleContentComponent } from '../help-ext-article-content/help-ext-article-content.component';\n\n@Directive({\n  selector: 'help-ext-article-content[uid]',\n  exportAs: 'helpExtUid',\n})\nexport class HelpExtUidDirective {\n  @Input()\n  set uid(value: string) {\n    this._api.getArticleByUid(location.origin, value).subscribe(\n      article => (this._host.article = article),\n      () => (this._host.article = null),\n    );\n  }\n\n  constructor(private readonly _api: HelpExtService, private readonly _host: HelpExtArticleContentComponent) {}\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { Attachment } from '../api/attachment';\n\n@Component({\n  selector: 'help-ext-attachment',\n  templateUrl: './help-ext-attachment.template.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class HelpExtAttachmentComponent {\n  @Input()\n  attachment: Attachment;\n}\n","import { OverlayModule } from '@angular/cdk/overlay';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { HelpExtUidDirective } from '../accessors/uid.directive';\nimport { cacheLifetimeSecondDefault, HelpExtService } from '../api/help-ext.service';\nimport { HelpExtArticleContentComponent } from '../help-ext-article-content/help-ext-article-content.component';\nimport { HelpExtAttachmentComponent } from '../help-ext-attachment/help-ext-attachment.component';\nimport { HelpExtFlyoutComponent } from '../help-ext-flyout/help-ext-flyout.component';\nimport {\n  HelpExtConfig,\n  HelpExtUrlResolver,\n  HELP_EXT_CACHE_LIFETIME_TOKEN,\n  HELP_EXT_HTTP_HEADERS,\n  HELP_EXT_URL_TOKEN,\n} from '../help-ext.config';\nimport { HelpExtComponent } from './help-ext.component';\n\n@NgModule({\n  imports: [CommonModule, PortalModule, OverlayModule],\n  declarations: [\n    HelpExtComponent,\n    HelpExtFlyoutComponent,\n    HelpExtArticleContentComponent,\n    HelpExtAttachmentComponent,\n    HelpExtUidDirective,\n  ],\n  exports: [HelpExtComponent, HelpExtArticleContentComponent, HelpExtAttachmentComponent, HelpExtUidDirective],\n  entryComponents: [HelpExtFlyoutComponent],\n})\nexport class HelpExtModule {\n  static forRoot(config: HelpExtConfig): ModuleWithProviders<HelpExtModule> {\n    return {\n      ngModule: HelpExtModule,\n      providers: [\n        config.helpExtUrlResolver || { provide: HelpExtUrlResolver, useValue: null },\n        {\n          provide: HELP_EXT_URL_TOKEN,\n          useValue: config.helpExtUrl,\n        },\n        {\n          provide: HELP_EXT_CACHE_LIFETIME_TOKEN,\n          useValue: isNaN(config.cacheLifetimeSecond) ? cacheLifetimeSecondDefault : config.cacheLifetimeSecond,\n        },\n        {\n          provide: HELP_EXT_HTTP_HEADERS,\n          useValue: config.httpHeaders,\n        },\n        HelpExtService,\n      ],\n    };\n  }\n}\n","/*\n * Public API Surface of ngx-help-ext\n */\n\nexport { Article } from './lib/api/article';\nexport { Attachment } from './lib/api/attachment';\nexport { HelpExtService } from './lib/api/help-ext.service';\nexport * from './lib/help-ext.config';\nexport * from './lib/help-ext/help-ext.component';\nexport * from './lib/help-ext/help-ext.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {HelpExtUidDirective as ɵf} from './lib/accessors/uid.directive';\nexport {cacheLifetimeSecondDefault as ɵa} from './lib/api/help-ext.service';\nexport {HelpExtArticleContentComponent as ɵd} from './lib/help-ext-article-content/help-ext-article-content.component';\nexport {HelpExtAttachmentComponent as ɵe} from './lib/help-ext-attachment/help-ext-attachment.component';\nexport {helpExtFlyoutAnimations as ɵc} from './lib/help-ext-flyout/help-ext-flyout-animations';\nexport {HelpExtFlyoutComponent as ɵb} from './lib/help-ext-flyout/help-ext-flyout.component';"],"names":[],"mappings":"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"}